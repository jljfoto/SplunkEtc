webpackJsonp([3],{"splunkjs/mvc/debugger":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_RESULT__=function(require,exports,module){var _=__webpack_require__("require/underscore"),Backbone=__webpack_require__("require/backbone"),BaseManager=__webpack_require__("splunkjs/mvc/basemanager"),BaseSplunkView=__webpack_require__("splunkjs/mvc/basesplunkview"),BaseTokenModel=__webpack_require__("splunkjs/mvc/basetokenmodel"),SearchModels=__webpack_require__("splunkjs/mvc/searchmodel"),console=window.console,indent=function(count){for(var str="",i=0;i<count;i++)str+="    ";return str},warn=function(msg){return"WARNING: "+msg},categoryEnum={MANAGER:"manager",VIEW:"view",NAMESPACE:"namespace",UNKNOWN:"unknown"},Debugger=Backbone.Model.extend({ready:!1,initialize:function(){var that=this;return that.registry=that.get("registry"),that.registry?void console.log("The Splunkjs debugger is running. For help, enter 'splunkjs.mvc.Debugger.help()'"):void console.log("splunk.mvc debugging interface could not find the registry")},isReady:function(){return this.ready},getDebugData:function(){var that=this,components=[],registeredComponentKeys=that.registry.getInstanceNames();_.each(registeredComponentKeys,function(elementID){var registryElement=that.registry.getInstance(elementID),type=that._getComponentType(registryElement),category=that._getComponentCategory(registryElement),validOptions=[],elementMetaData={id:elementID,category:category,type:type,warnings:[]};if(category===categoryEnum.VIEW){var managerid=null,settings={};validOptions=that._getValidViewOptions(registryElement),registryElement.settings&&(managerid=registryElement.settings.get("managerid")||null,settings=_.clone(registryElement.settings.attributes),_.each(_.keys(settings),function(key){if(!_.contains(validOptions,key)){var partOne=key.split(".")[0];"mapping"!==partOne&&"charting"!==partOne&&elementMetaData.warnings.push(warn(key+" is not a recognized setting."))}})),elementMetaData.managerid=managerid,elementMetaData.settings=settings,elementMetaData.el=registryElement.el||"no element set"}if(category===categoryEnum.NAMESPACE&&(elementMetaData.tokens=[],_.each(registryElement.attributes,function(value,key){var tokenData={name:key,value:value,listenerIds:[]};elementMetaData.tokens.push(tokenData)})),category===categoryEnum.MANAGER){if(validOptions=that._getValidManagerOptions(registryElement),registryElement.attributes){var attributes=_.clone(registryElement.attributes);_.each(_.keys(attributes),function(key){_.contains(validOptions,key)||elementMetaData.warnings.push(warn(key+" is not a recognized attribute"))})}elementMetaData.attributes=registryElement.attributes,elementMetaData.query=registryElement.query,elementMetaData.search=registryElement.search}category!==categoryEnum.NAMESPACE&&(elementMetaData.bindings=that._getComponentBindings(elementID)),components.push(elementMetaData)});var managers=_.where(components,{category:categoryEnum.MANAGER}),views=_.where(components,{category:categoryEnum.VIEW}),namespaces=_.where(components,{category:categoryEnum.NAMESPACE});return _.each(managers,function(manager){manager.viewIds=_.pluck(_.where(views,{managerid:manager.id}),"id"),manager.viewIds.length<1&&manager.warnings.push(warn("no views bound to search manager."))}),_.each(views,function(view){view.managerid&&(_.contains(_.pluck(managers,"id"),view.managerid)||view.warnings.push(warn(view.managerid+" is not a registered manager.")))}),_.each(namespaces,function(namespace){_.each(namespace.tokens,function(token){var listeners=_.filter(_.union(managers,views),function(item){return _.some(item.bindings,function(binding){if(binding&&binding.observes&&binding.observes.length>0)return _.some(binding.observes,function(observes){return observes.namespace===namespace.id&&observes.name===token.name})})});token.listenerIds=_.pluck(listeners,"id")})}),components},_getValidViewOptions:function(element){var options=["id","name","managerid","manager","app","el","data"];return element.constructor.prototype.options&&(options=_.union(options,_.keys(element.constructor.prototype.options))),options},_getValidManagerOptions:function(element){var validOptions=_.union(["app","id","owner","name","data"],_.keys(element.constructor.prototype.defaults)||[],SearchModels.SearchSettingsModel.ALLOWED_ATTRIBUTES);return validOptions},_getComponentType:function(component){var type="Unknown type";if(component.moduleId){var name=component.moduleId.split("/").pop();name.length>0&&(type=name)}return type},_getComponentCategory:function(component){var category=categoryEnum.UNKNOWN;return component instanceof BaseSplunkView?category=categoryEnum.VIEW:component instanceof BaseManager?category=categoryEnum.MANAGER:component instanceof BaseTokenModel&&(category=categoryEnum.NAMESPACE),category},_getComponentTokenBoundProperties:function(componentId){var tokenBoundProperties=[],bindings=this._getComponentBindings(componentId);return tokenBoundProperties=_.keys(bindings)},_getComponentBindings:function(componentId){var component=this.registry.getInstance(componentId),bindings={};return component&&component.settings&&(bindings=_.extend(bindings,_.clone(component.settings._bindings))),bindings},createError:function(message){return message},printViewInfo:function(){var that=this,views=that.getInfoForViews();console.log("Views:"),_.each(views,function(view){console.log(indent(1)+"ID: "+view.id),console.log(indent(2)+"Type: "+view.type),console.log(indent(2)+"Manager: "+view.managerid),console.log(indent(2)+"Element: ",view.el),console.log(indent(2)+"Settings: "),_.each(_.keys(view.settings),function(key){var tokenInfo="",binding=view.bindings[key],hasTokens=binding&&binding.observes&&binding.observes.length>0;if(hasTokens){var template=JSON.stringify(binding.template),partiallyResolvedValue=JSON.stringify(binding.computeValue(!0));tokenInfo=" [bound: "+template+", resolved: "+partiallyResolvedValue+"]"}console.log(indent(3)+key+": "+JSON.stringify(view.settings[key])+tokenInfo)}),view.warnings.length>0&&(console.log(indent(2)+"WARNINGS: "),_.each(view.warnings,function(warning){console.log(indent(3)+warning)}))})},printSearchManagerInfo:function(){var that=this,managers=that.getInfoForManagers();console.log("Search Managers:"),_.each(managers,function(manager){if(console.log(indent(1)+"ID: "+manager.id),console.log(indent(2)+"Type: "+manager.type),manager.attributes){console.log(indent(2)+"Attributes: ");var propertiesToSkip=SearchModels.SearchSettingsModel.ALLOWED_ATTRIBUTES;_.each(manager.attributes,function(value,key){_.contains(propertiesToSkip,key)||console.log(indent(3)+key+": "+JSON.stringify(value))})}manager.settings&&manager.settings.attributes&&(console.log(indent(2)+"Search Properties: "),_.each(manager.settings.attributes,function(value,key){var tokenInfo="",binding=manager.bindings[key],hasTokens=binding&&binding.observes&&binding.observes.length>0;if(hasTokens){var template=JSON.stringify(binding.template),partiallyResolvedValue=JSON.stringify(binding.computeValue(!0));tokenInfo=" [bound: "+template+", resolved: "+partiallyResolvedValue+"]"}console.log(indent(3)+key+": "+JSON.stringify(value)+tokenInfo)})),console.log(indent(2)+"Views bound to manager: "),_.each(manager.viewIds,function(id){console.log(indent(3)+id)}),manager.warnings.length>0&&(console.log(indent(2)+"WARNINGS: "),_.each(manager.warnings,function(warning){console.log(indent(3)+warning)}))})},printTokenNamespaceInfo:function(){var that=this,namespaces=that.getInfoForNamespaces();console.log("Token Namespaces:"),_.each(namespaces,function(namespace){console.log(indent(1)+"ID: "+namespace.id),console.log(indent(2)+"Type: "+namespace.type),console.log(indent(2)+"Tokens: "),_.each(namespace.tokens,function(token){console.log(indent(3)+token.name+": "),console.log(indent(4)+"value: "+JSON.stringify(token.value)),console.log(indent(4)+"listeners: "+token.listenerIds.join(", "))})})},printComponentInfo:function(){this.printViewInfo(),this.printSearchManagerInfo(),this.printTokenNamespaceInfo()},printWarnings:function(){var that=this,components=that.getDebugData();console.log("WARNINGS:"),_.each(components,function(item){item.warnings.length>0&&(console.log(indent(1),"ID: "+item.id+": "),_.each(item.warnings,function(warning){console.log(indent(2)+warning)}))})},_getInfoForComponents:function(ctype){var components=this.getDebugData();return void 0!==ctype?_.where(components,{category:categoryEnum[ctype]}):components},getInfoForViews:function(){return this._getInfoForComponents("VIEW")},getInfoForManagers:function(){return this._getInfoForComponents("MANAGER")},getInfoForNamespaces:function(){return this._getInfoForComponents("NAMESPACE")},help:function(){console.log("Splunkjs Debugger Commands"),console.log(indent(1)+"- printWarnings(): Prints all warnings to the console."),console.log(indent(1)+"- printComponentInfo(): Prints all debug info and warnings to the console by component."),console.log(indent(1)+"- printViewInfo(): Prints debug info for all Splunk views."),console.log(indent(1)+"- printSearchManagerInfo(): Prints debug info for all Splunk search managers."),console.log(indent(1)+"- printTokenNamespaceInfo(): Prints debug info for Splunk token namespaces."),console.log(indent(1)+"- getDebugData(): Returns all debug metadata for components and namespaces."),console.log(indent(1)+"- getInfoForViews(): Returns debug metadata for all Splunk views."),console.log(indent(1)+"- getInfoForManagers(): Returns debug metadata for all Splunk managers."),console.log(indent(1)+"- getInfoForNamespaces(): Returns debug metadata for all Splunk token namespaces.")}});return Debugger}.call(exports,__webpack_require__,exports,module),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"splunkjs/mvc/basesplunkview":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_RESULT__=function(require,exports,module){var _=__webpack_require__("require/underscore"),mvc=__webpack_require__("splunkjs/mvc/mvc"),console=__webpack_require__("util/console"),Backbone=__webpack_require__("require/backbone"),Settings=__webpack_require__("splunkjs/mvc/settings"),viewloggingmixin=__webpack_require__("mixins/viewlogging"),BaseSplunkView=Backbone.View.extend({_numConfigureCalls:0,omitFromSettings:[],_uniqueIdPrefix:"view_",constructor:function(options,settingsOptions){options=options||{},settingsOptions=settingsOptions||{},options.settingsOptions=_.extend(options.settingsOptions||{},settingsOptions),this._removed=!1;var id=options.id;void 0===id&&options.name&&(id=options.name,console.warn("Use of 'name' to specify the ID of a Splunk model is deprecated.")),void 0===id&&(id=_.uniqueId(this._uniqueIdPrefix||"view_")),this.name=this.id=options.name=options.id=id,this.options=_.extend({},this.options,options);var returned=Backbone.View.prototype.constructor.apply(this,arguments);return 0==this._numConfigureCalls&&this.configure(),mvc.Components.registerInstance(this.id,this,{replace:settingsOptions.replace}),returned},configure:function(){if(this._numConfigureCalls++,this._numConfigureCalls>1)throw new Error("BaseSplunkView.configure() called multiple times.");var settings=this.options.settings;if(settings&&settings instanceof Settings)return this.settings=settings,this;var localOmitFromSettings=(this.omitFromSettings||[]).concat(["model","collection","el","attributes","className","tagName","events","settingsOptions"]),settingsAttributes=_.omit(this.options,localOmitFromSettings),settingsOptions=this.options.settingsOptions;return this.settings=new Settings(settingsAttributes,settingsOptions),this},initialize:function(){Backbone.View.prototype.initialize.apply(this,arguments)},remove:function(){return this._removed=!0,this.settings.dispose(),Backbone.View.prototype.remove.apply(this,arguments),mvc.Components.getInstance(this.id)===this&&mvc.Components.revokeInstance(this.id),this},dispose:function(){this.remove()},setElement:function(){return Backbone.View.prototype.setElement.apply(this,arguments),this.$el.addClass("splunk-view"),this.className&&this.$el.addClass(this.className),this.$el.attr("id")||this.$el.attr("id",this.id),this},bindToComponentSetting:function(settingName,fn,fnContext){this.listenTo(this.settings,"change:"+settingName,function(model,value,options){var oldComponentName=this.settings.previous(settingName),newComponentName=value;this.unbindFromComponent(oldComponentName,fn,fnContext),this.bindToComponent(newComponentName,fn,fnContext)},this);var initialComponentName=this.settings.get(settingName);this.bindToComponent(initialComponentName,fn,fnContext)},bindToComponent:function(id,fn,fnContext){if(!id||!fn)return this;if(this.listenTo(mvc.Components,"change:"+id,fn,fnContext),mvc.Components.has(id)){var ctx=mvc.Components.get(id);_.defer(_.bind(function(){this._removed||fn.apply(fnContext,[mvc.Components,ctx,{}])},this))}return this},unbindFromComponent:function(id,fn,fnContext){return id?(mvc.Components.off("change:"+id,fn,fnContext),this):this}});return _.extend(BaseSplunkView.prototype,viewloggingmixin),BaseSplunkView}.call(exports,__webpack_require__,exports,module),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"splunkjs/mvc/settings":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_RESULT__=function(require,exports,module){var TokenAwareModel=__webpack_require__("splunkjs/mvc/tokenawaremodel"),Settings=TokenAwareModel.extend({sync:function(){return!1}});return Settings}.call(exports,__webpack_require__,exports,module),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))},"mixins/viewlogging":function(module,exports,__webpack_require__){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__;__WEBPACK_AMD_DEFINE_ARRAY__=[__webpack_require__("require/underscore"),__webpack_require__("require/backbone"),__webpack_require__("shim/splunk.logger"),__webpack_require__("shim/splunk.util")],__WEBPACK_AMD_DEFINE_RESULT__=function(_,Backbone,SplunkLogger,splunkUtils){var logMode=splunkUtils.getConfigValue("JS_LOGGER_MODE","None"),logLevel=splunkUtils.getConfigValue("JS_LOGGER_LEVEL","INFO"),shouldAttachLogging="None"!==logMode&&"DEBUG"===logLevel,domEventBlacklist=["mousemove","scroll"],logger=null,viewlogging={delegateEvents:function(events){if(!shouldAttachLogging)return Backbone.View.prototype.delegateEvents.call(this,events);if(events=events||_.result(this,"events"),!events)return Backbone.View.prototype.delegateEvents.call(this,events);var wrappedEvents={};return _(events).each(function(handler,eventName){var normalizedHandler=_.isFunction(handler)?handler:this[handler];if(_.isFunction(normalizedHandler)&&_(domEventBlacklist).indexOf(eventName)===-1){var viewId=this.moduleId+"/"+this.cid;wrappedEvents[eventName]=function(){logger||(logger=SplunkLogger.getLogger("viewlogging.js")),logger.debug("view "+viewId+" is handling event "+eventName.replace(/\s+/g," ")),normalizedHandler.apply(this,arguments)}}else wrappedEvents[eventName]=handler},this),Backbone.View.prototype.delegateEvents.call(this,wrappedEvents)}};return viewlogging}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),!(void 0!==__WEBPACK_AMD_DEFINE_RESULT__&&(module.exports=__WEBPACK_AMD_DEFINE_RESULT__))}});